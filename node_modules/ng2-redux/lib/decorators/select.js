"use strict";
var _this = this;
var ng_redux_1 = require('../components/ng-redux');
/**
 * Selects an observable from the store, and attaches it to the decorated
 * property.
 *
 * @param {string | string[] | function} statePathOrFunc
 * An Rxjs selector function, property name string, or property name path
 * (array of strings/array indices) that locates the store data to be
 * selected
 *
 * @param {function} comparer function for this selector
 */
exports.select = function (statePathOrFunc, comparer) {
    return function (target, key) {
        var bindingKey = statePathOrFunc;
        if (!statePathOrFunc) {
            bindingKey = (key.lastIndexOf('$') === key.length - 1) ?
                key.substring(0, key.length - 1) :
                key;
        }
        function getter() {
            return ng_redux_1.NgRedux.instance.select(bindingKey, comparer);
        }
        // Delete property.
        if (delete _this[key]) {
            // Create new property with getter and setter
            Object.defineProperty(target, key, {
                get: getter,
                enumerable: true,
                configurable: true
            });
        }
    };
};
//# sourceMappingURL=select.js.map